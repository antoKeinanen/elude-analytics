generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Statistics {
    id        String   @id @default(cuid())
    siteId    String
    pageViews Int      @default(0)
    users     Int      @default(0)
    bounce    Int      @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Site      Site?
}

model Site {
    id           String     @id @default(cuid())
    name         String
    description  String?
    url          String
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt
    owner        User       @relation(fields: [ownerId], references: [id])
    ownerId      String
    statistics   Statistics @relation(fields: [statisticsId], references: [id])
    statisticsId String     @unique
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    sites         Site[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
